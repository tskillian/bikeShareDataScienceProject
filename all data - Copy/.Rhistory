set.seed(1)
rpois(5,2)
rpois(5,2)
rpois(5,2)
set.seed(2)
rpois(5,2)
set.seed(1)
rpois(5,2)
rpois(5,2)
set.seed(2)
rpois(5,2)
rpois(5,2)
set.seed(2)
rpois(5,2)
set.seed(1)
rpois(5,2)
?rnorm
group1 <- rnorm(60, 50, 10)
group2 <- rnorm(80,60,8)
group3 <- rnorm(100,70,6)
group4 <- rnorm(80,80,4)
group5 <- rnorm(60,90,2)
lapply(.packages(all.available = TRUE), function(xx) library(xx,character.only = TRUE))
group1
data <- cbind(group1,group2,group3,group4,group5)
?cbind
class(group1)
group1 <- sample(60, 50, 10)
View(data)
?sample
?round
data <- round(data)
View(data)
set.seed(1)
group1 <- rnorm(60, 50, 10)
group2 <- rnorm(80,60,8)
group3 <- rnorm(100,70,6)
group4 <- rnorm(80,80,4)
group5 <- rnorm(60,90,2)
data <- cbind(group1,group2,group3,group4,group5)
data <- round(data)
View(data)
describe(data)
hist(data)
?rnorm
set.seed(1)
group1 <- rnorm(100, 50, 10)
group2 <- rnorm(100,60,8)
group3 <- rnorm(100,70,6)
group4 <- rnorm(100,80,4)
group5 <- rnorm(100,90,2)
group1
data <- cbind(group1,group2,group3,group4,group5)
data <- round(data)
describe(data)
?ttest
?t.test
t.test(data$group1,data$group2)
t.test(group1~group2,data=data)
View(data)
smiths
data(smiths)
iris
datasets(iris)
dataset(iris)
load(iris)
?iris
iris <- iris
View(iris)
smiths <- smiths
smiths <- smiths
smiths
melt(smiths,id=c("subject","time"),measured=c("age","weight","height"))
meltedsmith <- melt(smiths,id=c("subject","time"),measured=c("age","weight","height"))
trial <- data.frame(id=factor(1:4),A1=c(1,2,1,2),A2=c(2,1,2,1),B1=c(3,3,3,3))
trial
trialcorrected <- melt(trial)
trialcorrected
data2 <- melt(data)
data2
View(data2)
aov(data2,data2$Var2)
aov
?aov
names(data2)
names(data2) <- c("GroupID","Group","Score")
head(data2)
?sub
sub(group1,1,data2)
head(data2)
for(i in data2$Group) {
sub(group1,1,data2[i])
}
for(i in data2[,2]) {
sub(group1,1,data2[i])
}
head(data2)
sub("group1","1",data2)
head(data2)
sub("group1","1",data2$Group)
head(data2)
for(i in data2[,2]) {
if data2$Group=="group1" data2$Group=1[i]
}
gsub("group1","1",data2$Group)
head(data2)
aov(Score~Group,data=data2)
class(data2$Group)
describeBy(data2,data2$Group)
set.seed(1)
group1 <- rnorm(100,50,10)
group2 <- rnorm(100,60,10)
group3 <- rnorm(100,70,10)
group4 <- rnorm(100,80,10)
group5 <- rnorm(100,90,10)
data <- cbind(group1,group2,group3,group4,group5)
class(group1)
data <- round(data)
View(data)
5 <- rnorm(100,90,10)
One <- rnorm(100,50,10)
Two <- rnorm(100,60,10)
Three <- rnorm(100,70,10)
Four <- rnorm(100,80,10)
set.seed(1)
One <- rnorm(100,50,10)
Two <- rnorm(100,60,10)
Three <- rnorm(100,70,10)
Four <- rnorm(100,80,10)
Five <- rnorm(100,90,10)
data <- cbind(One,Two,Three,Four,Five)
data <- round(data)
describe(data)
data2 <- melt(data)
data2
names(data2)
names(data2) <- c("GroupID","Group","Score")
head(data2)
aov(Score~Group,data=data2)
?aov
aov(formula=Score~Group,data=data2)
aov(formula=data2$Score~data2$Group)
aov <- aov(formula=data2$Score~data2$Group)
aov$coeff
summary(aov)
describeBy(data2,data2$Group)
describeBy(data2,data2$Group)
describeBy(data2,data2$Group)
lapply(.packages(all.available = TRUE), function(xx) library(xx,character.only = TRUE))
install.packages("XLConnect")
library("XLConnect", lib.loc="C:/Users/Dan/Documents/R/win-library/3.1")
library("rJava", lib.loc="C:/Users/Dan/Documents/R/win-library/3.1")
install.packages("xlsx")
library("xlsx", lib.loc="C:/Users/Dan/Documents/R/win-library/3.1")
library("xlsxjars", lib.loc="C:/Users/Dan/Documents/R/win-library/3.1")
install.packages("jsonlite")
install.packages("data.table")
library("data.table", lib.loc="C:/Users/Dan/Documents/R/win-library/3.1")
library(nlme)
library(lattice)
xyplot(weight~Time|Diet,Bodyweight)
xyplot(weight~Time|Diet,BodyWeight)
?nlme
library(datasets)
data(airquality)
qplot(Wind,Ozone,data=airquality,geom="smooth")
library("ggplot2", lib.loc="C:/Users/Dan/Documents/R/win-library/3.1")
qplot(Wind,Ozone,data=airquality,geom="smooth")
qplot(Wind,Ozone,data=airquality)
qplot(Wind,Ozone,data=airquality,facets=.~factor(Month))
airquality=transform(airquality,Month=factor(Month))
qplot(Wind,Ozone,data=airquality,facets=.~factor(Month))
qplot(Wind,Ozone,data=airquality,facets=.~(Month))
airquality=transform(airquality,Month=factor(Month))
qplot(Wind,Ozone,data=airquality,facets=.~(Month))
qplot(Wind,Ozone,data=airquality,facets=.~factor(Month))
airquality <- data(airquality)
airquality <- airquality
library(datasets)
airquality <- airquality
library()
.packages
?packages
library(abind)
commonPackages <- c(abind,acs,aod,arm)
commonPackages <- c(abind,"acs",aod,arm)
commonPackages <- c("abind","acs","aod","arm")
library(commonPackages)
lapply(library,commonPackages)
?lapply
packages
.packages
library(aod,acs)
library("acs", lib.loc="C:/Users/Dan/Documents/R/win-library/3.1")
load(acs)
load("acs")
load(ape)
load("ape")
library(ape)
library(bitops,blme)
require(commonPackages)
commonPackages <- c("abind","acs","aod","arm")
require(commonPackages)
lapply(x, require,character.only=T)
lapply(commonPackages, require,character.only=T)
do.call("require", commonPackages)
commonPackages <- c("abind","acs","aod","arm")
library("rJava", lib.loc="C:/Users/Dan/Documents/R/win-library/3.1")
library("rjson", lib.loc="C:/Users/Dan/Documents/R/win-library/3.1")
library("RJSONIO", lib.loc="C:/Users/Dan/Documents/R/win-library/3.1")
library("XLConnect", lib.loc="C:/Users/Dan/Documents/R/win-library/3.1")
library("xlsx", lib.loc="C:/Users/Dan/Documents/R/win-library/3.1")
library("XML", lib.loc="C:/Users/Dan/Documents/R/win-library/3.1")
x <- c("TSA, tseries")
lapply(x, FUN = function(X) {
do.call("require", list(X))
})
lapply(x, FUN = function(x) {
do.call("require", list(x))
})
?require
lapply(x,library,character.only=T)
x <- c("TSA", "tseries")
lapply(x,library,character.only=T)
game <- CLELAL09
library("animation", lib.loc="C:/Users/Dan/Documents/R/win-library/3.1")
game <- CLELAL09
View(game)
basePackages <- c("abind","acs", "arm","blme","boot","car","choroplethr","data.table","DBI","dummies","ElemStatLearn","FactoMineR", "foreign","formatR","fPortfolio","gclus","gcookbook","ggplot2","GPArotation","graphics","grDevices","grid","gss","hett","Hmisc","httr","KernSmooth","knitr","labeling","lars","latentnet","lattice","lavaan","lme4","locfit","lsr","lubridate","manipulate","markdown","MASS","Matrix","methods","mnormt","modeltools","multilevel","mvnormtest","mvtnorm","network","nFactors","nlme","openintro","parallel","plotrix","plyr","pscl","psych","pwr","QuantPsyc","quantreg","randomForest","reshape2","rJava","rms","robust","rpart","rstudio","sandwich","sem","sm","sn","SparseM","stats","stringi","stringr","strucchange","survey","survival","swirl","tables","timeDate","utils","vcd","XLConnect","xlsx","xlsjars","XML","xtable")
?load
load(aod)
library(aod)
library(RMySQL)
basePackages <- c("abind","acs", "arm","blme","boot","car","choroplethr","data.table","DBI","dummies","ElemStatLearn","FactoMineR", "foreign","formatR","fPortfolio","gclus","gcookbook","ggplot2","GPArotation","graphics","grDevices","grid","gss","hett","Hmisc","httr","KernSmooth","knitr","labeling","lars","latentnet","lattice","lavaan","lme4","locfit","lsr","lubridate","manipulate","markdown","MASS","Matrix","memisc","methods","mnormt","modeltools","multilevel","mvnormtest","mvtnorm","network","nFactors","nlme","NLSdata","openintro","parallel","plotrix","plyr","pscl","psych","pwr","QuantPsyc","quantreg","randomForest","reshape2","rJava","rms","robust","rpart","rstudio","sandwich","sem","sm","sn","SparseM","stats","stringi","stringr","strucchange","survey","survival","swirl","tables","timeDate","utils","vcd","XLConnect","xlsx","xlsxjars","XML","xtable")
lapply(basePackages,library,character.only=T)
library(RTools)
library(Rtools)
library("devtools", lib.loc="C:/Users/Dan/Documents/R/win-library/3.1")
basePackages <- c("abind","acs", "arm","blme","boot","car","choroplethr","data.table","DBI","dummies","ElemStatLearn","FactoMineR", "foreign","formatR","fPortfolio","gclus","gcookbook","ggplot2","GPArotation","graphics","grDevices","grid","gss","hett","Hmisc","httr","KernSmooth","knitr","labeling","lars","latentnet","lattice","lavaan","lme4","locfit","lsr","lubridate","manipulate","markdown","MASS","Matrix","memisc","methods","mnormt","modeltools","multilevel","mvnormtest","mvtnorm","network","nFactors","nlme","NLSdata","openintro","parallel","plotrix","plyr","pscl","psych","pwr","QuantPsyc","quantreg","randomForest","reshape2","rJava","rms","robust","rpart","rstudio","sandwich","sem","sm","sn","SparseM","stats","stringi","stringr","strucchange","survey","survival","swirl","tables","timeDate","UsingR","utils","vcd","XLConnect","xlsx","xlsxjars","XML","xtable")
lapply(basePackages,library,character.only=T)
x <- c(8.58, 10.46,9.01,9.64,8.86)
sum(x)
summary(x)
describe(x)
for(i in x) { z <- (x-mean(x))/sd(x) }
describe(z)
z
x <- c(.18,-1.54,.42,.95)
w <- c(2,1,3,1)
for(i in x) { m <- x*c }
for(i in x) { m <- x*w }
m
sum(m)
mean <- function(x,w) {
for(i in x) {
m <- x*w
sum(m)
}
}
mean(x,w)
mean
mean(x=x,w=w)
mean(x,w)
mean(x)
for(i in x) {
m <- x*w
mean <- sum(m)
mean
}
m
mean
for(i in x) {
m <- x*w
mean <- sum(m)/4
mean
}
mean
?rnorm
a <- rnorm(100, 30,20)
a <- round(rnorm(100, 30,20),1)
a <- round(rnorm(100, 30,20),0)
?poisson
qplot(a)
hist(a)
summary(a)
a <- round(rnorm(100, 50,20),0)
summary(a)
qplot(a)
hist(a)
qplot(a, binwidth=range/40)
qplot(a, binwidth=40)
qplot(a, binwidth=10)
qplot(a, binwidth=6)
qplot(a, binwidth=8)
qplot(a, binwidth=5)
basePackages <- c("abind","acs", "arm","blme","boot","car","choroplethr","data.table","DBI","dummies","ElemStatLearn","FactoMineR", "foreign","formatR","fPortfolio","gclus","gcookbook","ggplot2","GPArotation","graphics","grDevices","grid","gss","hett","Hmisc","httr","KernSmooth","knitr","labeling","lars","latentnet","lattice","lavaan","lme4","locfit","lsr","lubridate","manipulate","markdown","MASS","Matrix","memisc","methods","mnormt","modeltools","multilevel","mvnormtest","mvtnorm","network","nFactors","nlme","NLSdata","openintro","parallel","plotrix","plyr","pscl","psych","pwr","QuantPsyc","quantreg","randomForest","reshape2","rJava","rms","robust","rpart","rstudio","sandwich","sem","sm","sn","SparseM","stats","stringi","stringr","strucchange","survey","survival","swirl","tables","timeDate","UsingR","utils","vcd","XLConnect","xlsx","xlsxjars","XML","xtable")
lapply(basePackages,library,character.only=T)
setwd("C:/Users/Dan/Dropbox/personal/Coursera/data science certificate/data science project/Pulled usage data/all data")
filelist <- list.files()
multmerge <- function(mypath){
datalist <-  lapply(filelist, function(x){read.csv(file=x,header=T)})
Reduce(function(x,y) {merge(x,y)}, datalist)
setwd("C:/Users/Dan/Dropbox/personal/Coursera/data science certificate/data science project/Pulled usage data/all data")
filelist <- list.files()
bikes <- data.frame()
for (file in filelist) {
temp <- read.csv(file)
bikes <- rbind(bikes,temp,all=T)
rm(temp)
}
filelist <- list.files()
bikes <- data.frame()
for (file in filelist) {
temp <- read.csv(file)
bikes <- rbind(bikes,temp)
rm(temp)
}
